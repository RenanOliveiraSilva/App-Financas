generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MovimentType {
  INCOME
  OUTCOME
}

enum IncomeType {
  SALARY
  UNIQUE
  OTHER
}

enum OutcomeType {
  BILLS
  FOOD
  TRANSPORT
  ENTERTAINMENT
  OTHER
}

enum PaymentStatus {
  PENDING
  PAID
}

model User {
  id         Int         @id @default(autoincrement())
  name       String      @default("") 
  email      String      @unique
  password   String
  createdAt  DateTime    @default(now())

  moviments  Moviment[]
}

model Category {
  id          Int         @id @default(autoincrement())
  name        String      @unique
  description String?

  moviments   Moviment[]
}

model Moviment {
  id          Int         @id @default(autoincrement())
  description String      @db.VarChar(255)
  amount      Float
  date        DateTime    @default(now())
  type        MovimentType
  incomeType  IncomeType?
  outcomeType OutcomeType?

  userId      Int
  User        User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  categoryId  Int?
  Category    Category?   @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  installments Installment[]
}

model Installment {
  id               Int            @id @default(autoincrement())
  movimentId      Int
  installmentNumber Int           // NÃºmero da parcela (1, 2, 3, ...)
  amount          Float           // Valor da parcela
  dueDate         DateTime        // Data de vencimento
  status          PaymentStatus   @default(PENDING) // Pendente ou Pago

  Moviment        Moviment        @relation(fields: [movimentId], references: [id], onDelete: Cascade)
}
